# This workflow uses actions to build the project using MSBuild and vcpkg for package management.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Configuration type to build.
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
    # Step 1: Checkout repository and initialize submodules
    - uses: actions/checkout@v3
      with:
        submodules: true

    # Step 2: Setup CMake
    - uses: lukka/get-cmake@latest

    # Step 3: Directory listing (for debugging)
    - name: List $RUNNER_WORKSPACE before vcpkg setup
      run: find $RUNNER_WORKSPACE
      shell: bash

    # Step 4: Setup vcpkg and install dependencies from vcpkg.json
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: runvcpkg
      with:
        vcpkgJsonGlob: '**/vcpkg.json'

    # Step 5: Print vcpkg outputs
    - name: Prints output of run-vcpkg's action
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_DEFAULT_TRIPLET_OUT }}' "

    # Step 6: Build using MSBuild
    - name: Run CMake+MSBuild
      uses: lukka/run-cmake@v10
      if: contains(matrix.os, 'windows')
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        configurePreset: 'msbuild-vcpkg'
        buildPreset: 'msbuild-vcpkg'

    # Step 7: Directory listing after build (for debugging)
    - name: List $RUNNER_WORKSPACE after build
      run: find $RUNNER_WORKSPACE
      shell: bash
